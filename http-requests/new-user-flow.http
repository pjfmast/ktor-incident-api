### Register a new user
POST http://localhost:8080/api/users/register
Content-Type: application/json

{
  "username": "testuser",
  "password": "testpass123",
  "email": "test@example.com"
}

### Login as a new user and save token
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "username": "testuser",
  "password": "testpass123"
}

> {%
    client.global.set("newUserToken", response.body.token);
%}

### GET information on this new logged-in user
GET http://localhost:8080/api/users/me
Authorization: Bearer {{newUserToken}}

### Update logged-in user details
PUT http://localhost:8080/api/users/me
Content-Type: application/json
Authorization: Bearer {{newUserToken}}

{
  "username": "kanariepiet",
  "email": "piet@breda.nl",
  "password": "pietIsOk"
}

### After an update of user, the user should login again with updated info and again save token
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "username": "kanariepiet",
  "password": "pietIsOk"
}

> {%
    client.global.set("newUserToken", response.body.token);
%}

### GET information on user with updated username and email
GET http://localhost:8080/api/users/me
Authorization: Bearer {{newUserToken}}

### a normal USER cannot promote themself to OFFICIAL, but an ADMIN can
PUT http://localhost:8080/api/users/2/role
Content-Type: application/json
Authorization: Bearer {{newUserToken}}

{
  "role": "OFFICIAL"
}

### Report a new incident and save id of new incident
POST http://localhost:8080/api/incidents
Content-Type: application/json
Authorization: Bearer {{newUserToken}}

{
  "category": "traffic",
  "description": "Broken traffic light",
  "latitude": 51.5897,
  "longitude": 4.7742,
  "priority": "HIGH"
}

> {%
    client.global.set("newIncidentByUser", response.body.id);
%}

### Get all my incidents
GET http://localhost:8080/api/incidents/my-incidents
Authorization: Bearer {{newUserToken}}

### Update existing incident 5
PUT http://localhost:8080/api/incidents/{{newIncidentByUser}}
Content-Type: application/json
Authorization: Bearer {{newUserToken}}

{
  "category": "traffic",
  "description": "Update: Broken traffic light with damaged pole",
  "latitude": 51.5897,
  "longitude": 4.7742
}

### Get all my incidents
GET http://localhost:8080/api/incidents/my-incidents
Authorization: Bearer {{newUserToken}}

### Upload multiple images to the new reported incident - But problem when sending multiple files with the same form field name () `name="image"`
POST http://localhost:8080/api/incidents/{{newIncidentByUser}}/images
Content-Type: multipart/form-data; boundary=WebAppBoundary
Authorization: Bearer {{newUserToken}}

--WebAppBoundary
Content-Disposition: form-data; name="image"; filename="broken-traffic-light.jpeg"
Content-Type: image/jpeg

< ../testimages/broken-traffic-light.jpeg

--WebAppBoundary
Content-Disposition: form-data; name="image2"; filename="broken-traffic-light-red.jpeg"
Content-Type: image/jpeg

< ../testimages/broken-traffic-light-red.jpeg

--WebAppBoundary--

### Upload one other image to new reported incident
POST http://localhost:8080/api/incidents/{{newIncidentByUser}}/images
Content-Type: multipart/form-data; boundary=WebAppBoundary
Authorization: Bearer {{newUserToken}}

--WebAppBoundary
Content-Disposition: form-data; name="image"; filename="broken-traffic-light-orange.jpeg"
Content-Type: image/jpeg

< ../testimages/broken-traffic-light-orange.jpeg

--WebAppBoundary--

### Get all my incidents
GET http://localhost:8080/api/incidents/my-incidents
Authorization: Bearer {{newUserToken}}

### Get an image api/incidents/images
GET http://localhost:8080/api/incidents/images/incident5-image1.jpeg
Authorization: Bearer {{newUserToken}}
